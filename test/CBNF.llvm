; LLVM IR code for compiler for CBNF

declare ccc i32 @puts( i8* nocapture ) nounwind
declare ccc i32 @clParseCommandLine( i32, i8** nocapture ) nounwind
declare ccc i32 @clHasSwitch( i8* nocapture ) nounwind
declare ccc i8* @clMapSwitch( i8* nocapture ) nounwind
declare ccc i32 @clFileCount() nounwind
declare ccc i8* @clGetFile( i32 ) nounwind
declare ccc i32 @clLexerLineComment( i8* nocapture ) nounwind
declare ccc i32 @clLexerBlockComment( i8* nocapture, i8* nocapture ) nounwind
declare ccc i32 @clLexerQuote( i8* nocapture, i8* nocapture, i8* nocapture, i8* nocapture ) nounwind
declare ccc i32 @clLexerRule( i8* nocapture, i8* nocapture ) nounwind
declare ccc i32 @clLex( i8* nocapture ) nounwind
declare ccc i32 @clParseAppendExpression( i8* nocapture, i8, i8, i8 ) nounwind
declare ccc i32 @clParseCreateProduction( i8* nocapture ) nounwind

@.message1 = private constant [32 x i8] c"CBNF Compiler Generated By CBNF\00"
@.message2 = private constant [67 x i8] c"Copyright (c) 2017-2021 Cranium Software Ltd. All rights reserved.\00"
@.message3 = private constant [16 x i8] c"Lexing files...\00"
@.message4 = private constant [7 x i8] c"%s...\0A\00"
@.error1001 = private constant [43 x i8] c"cbnf: error 1001: No source files provided\00"
@.error1002 = private constant [42 x i8] c"cbnf: error 1002: No output path provided\00"
@.outputSwitchShort = private constant [2 x i8] c"o\00"
@.comment1 = private constant [3 x i8] c"//\00"
@.blockComment1 = private constant [3 x i8] c"/*\00"
@.blockComment2 = private constant [3 x i8] c"*/\00"
@.quote1 = private constant [7 x i8] c"string\00"
@.quote2 = private constant [2 x i8] c"\22\00"
@.quote3 = private constant [2 x i8] c"\22\00"
@.quote4 = private constant [2 x i8] c"\5C\00"
@.rule1 = private constant [9 x i8] c"keywords\00"
@.rule2 = private constant [12 x i8] c"identifiers\00"
@.rule3 = private constant [10 x i8] c"operators\00"
@.rule4 = private constant [11 x i8] c"separators\00"
@.rule5 = private constant [12 x i8] c"terminators\00"
@.rule6 = private constant [8 x i8] c"strings\00"
@.rule7 = private constant [9 x i8] c"language\00"
@.rule8 = private constant [8 x i8] c"comment\00"
@.rule9 = private constant [6 x i8] c"quote\00"
@.rule10 = private constant [7 x i8] c"lexeme\00"
@.rule11 = private constant [5 x i8] c"pass\00"
@.rule12 = private constant [9 x i8] c"requires\00"
@.rule13 = private constant [7 x i8] c"output\00"
@.rule14 = private constant [7 x i8] c"switch\00"
@.rule15 = private constant [6 x i8] c"write\00"
@.rule16 = private constant [5 x i8] c"name\00"
@.rule17 = private constant [4 x i8] c"for\00"
@.rule18 = private constant [5 x i8] c"each\00"
@.rule19 = private constant [3 x i8] c"in\00"
@.rule20 = private constant [12 x i8] c"productions\00"
@.rule21 = private constant [6 x i8] c"names\00"
@.rule22 = private constant [12 x i8] c"is-optional\00"
@.rule23 = private constant [13 x i8] c"is-non-empty\00"
@.rule24 = private constant [8 x i8] c"is-list\00"
@.rule25 = private constant [5 x i8] c"true\00"
@.rule26 = private constant [6 x i8] c"false\00"
@.rule27 = private constant [11 x i8] c"input-name\00"
@.rule28 = private constant [7 x i8] c"quotes\00"
@.rule29 = private constant [8 x i8] c"lexemes\00"
@.rule30 = private constant [15 x i8] c"block-comments\00"
@.rule31 = private constant [14 x i8] c"line-comments\00"
@.rule32 = private constant [7 x i8] c"passes\00"
@.rule33 = private constant [6 x i8] c"parse\00"
@.rule34 = private constant [5 x i8] c"walk\00"
@.rule35 = private constant [3 x i8] c"as\00"
@.rule36 = private constant [11 x i8] c"lower-case\00"
@.rule37 = private constant [15 x i8] c"quote-stripped\00"
@.rule38 = private constant [14 x i8] c"regex-escaped\00"
@.rule39 = private constant [21 x i8] c"double-regex-escaped\00"
@.rule40 = private constant [10 x i8] c"unescaped\00"
@.rule41 = private constant [12 x i8] c"ssi-counter\00"
@.rule42 = private constant [7 x i8] c"length\00"
@.rule43 = private constant [17 x i8] c"length-with-null\00"
@.rule44 = private constant [10 x i8] c"to-string\00"
@.rule45 = private constant [13 x i8] c"<identifier>\00"
@.rule46 = private constant [25 x i8] c"[_a-zA-Z][_\5C-a-zA-Z0-9]*\00"
@.rule47 = private constant [10 x i8] c"<integer>\00"
@.rule48 = private constant [7 x i8] c"[0-9]*\00"
@.rule49 = private constant [2 x i8] c"=\00"
@.rule50 = private constant [2 x i8] c"=\00"
@.rule51 = private constant [2 x i8] c"{\00"
@.rule52 = private constant [2 x i8] c"{\00"
@.rule53 = private constant [2 x i8] c"}\00"
@.rule54 = private constant [2 x i8] c"}\00"
@.rule55 = private constant [2 x i8] c"[\00"
@.rule56 = private constant [2 x i8] c"[\00"
@.rule57 = private constant [2 x i8] c"]\00"
@.rule58 = private constant [2 x i8] c"]\00"
@.rule59 = private constant [2 x i8] c"*\00"
@.rule60 = private constant [3 x i8] c"\5C*\00"
@.rule61 = private constant [2 x i8] c"+\00"
@.rule62 = private constant [3 x i8] c"\5C+\00"
@.rule63 = private constant [2 x i8] c"-\00"
@.rule64 = private constant [3 x i8] c"\5C-\00"
@.rule65 = private constant [2 x i8] c"?\00"
@.rule66 = private constant [3 x i8] c"\5C?\00"
@.rule67 = private constant [2 x i8] c".\00"
@.rule68 = private constant [3 x i8] c"\5C.\00"
@.rule69 = private constant [3 x i8] c"==\00"
@.rule70 = private constant [3 x i8] c"==\00"
@.rule71 = private constant [2 x i8] c";\00"
@.rule72 = private constant [2 x i8] c";\00"
@.production1 = private constant [10 x i8] c"<grammar>\00"
@.production2 = private constant [12 x i8] c"<statement>\00"
@.production3 = private constant [12 x i8] c"<statement>\00"
@.production4 = private constant [13 x i8] c"<production>\00"
@.production5 = private constant [12 x i8] c"<statement>\00"
@.production6 = private constant [9 x i8] c"keywords\00"
@.production7 = private constant [16 x i8] c"<terminal-list>\00"
@.production8 = private constant [12 x i8] c"<statement>\00"
@.production9 = private constant [12 x i8] c"identifiers\00"
@.production10 = private constant [16 x i8] c"<terminal-list>\00"
@.production11 = private constant [12 x i8] c"<statement>\00"
@.production12 = private constant [10 x i8] c"operators\00"
@.production13 = private constant [16 x i8] c"<terminal-list>\00"
@.production14 = private constant [12 x i8] c"<statement>\00"
@.production15 = private constant [11 x i8] c"separators\00"
@.production16 = private constant [16 x i8] c"<terminal-list>\00"
@.production17 = private constant [12 x i8] c"<statement>\00"
@.production18 = private constant [12 x i8] c"terminators\00"
@.production19 = private constant [16 x i8] c"<terminal-list>\00"
@.production20 = private constant [12 x i8] c"<statement>\00"
@.production21 = private constant [8 x i8] c"strings\00"
@.production22 = private constant [16 x i8] c"<terminal-list>\00"
@.production23 = private constant [12 x i8] c"<statement>\00"
@.production24 = private constant [18 x i8] c"<pass-definition>\00"
@.production25 = private constant [16 x i8] c"<terminal-list>\00"
@.production26 = private constant [2 x i8] c"{\00"
@.production27 = private constant [11 x i8] c"<terminal>\00"
@.production28 = private constant [2 x i8] c"}\00"
@.production29 = private constant [11 x i8] c"<terminal>\00"
@.production30 = private constant [13 x i8] c"<identifier>\00"
@.production31 = private constant [11 x i8] c"<terminal>\00"
@.production32 = private constant [9 x i8] c"<string>\00"
@.production33 = private constant [13 x i8] c"<production>\00"
@.production34 = private constant [8 x i8] c"comment\00"
@.production35 = private constant [9 x i8] c"<string>\00"
@.production36 = private constant [2 x i8] c";\00"
@.production37 = private constant [13 x i8] c"<production>\00"
@.production38 = private constant [8 x i8] c"comment\00"
@.production39 = private constant [9 x i8] c"<string>\00"
@.production40 = private constant [9 x i8] c"<string>\00"
@.production41 = private constant [2 x i8] c";\00"
@.production42 = private constant [13 x i8] c"<production>\00"
@.production43 = private constant [6 x i8] c"quote\00"
@.production44 = private constant [13 x i8] c"<identifier>\00"
@.production45 = private constant [9 x i8] c"<string>\00"
@.production46 = private constant [9 x i8] c"<string>\00"
@.production47 = private constant [9 x i8] c"<string>\00"
@.production48 = private constant [2 x i8] c";\00"
@.production49 = private constant [13 x i8] c"<production>\00"
@.production50 = private constant [7 x i8] c"lexeme\00"
@.production51 = private constant [13 x i8] c"<identifier>\00"
@.production52 = private constant [9 x i8] c"<string>\00"
@.production53 = private constant [2 x i8] c";\00"
@.production54 = private constant [13 x i8] c"<production>\00"
@.production55 = private constant [13 x i8] c"<identifier>\00"
@.production56 = private constant [2 x i8] c"=\00"
@.production57 = private constant [18 x i8] c"<rule-expression>\00"
@.production58 = private constant [2 x i8] c";\00"
@.production59 = private constant [13 x i8] c"<production>\00"
@.production60 = private constant [13 x i8] c"<identifier>\00"
@.production61 = private constant [2 x i8] c"=\00"
@.production62 = private constant [4 x i8] c"...\00"
@.production63 = private constant [2 x i8] c";\00"
@.production64 = private constant [18 x i8] c"<rule-expression>\00"
@.production65 = private constant [9 x i8] c"<string>\00"
@.production66 = private constant [18 x i8] c"<rule-expression>\00"
@.production67 = private constant [13 x i8] c"<identifier>\00"
@.production68 = private constant [18 x i8] c"<rule-expression>\00"
@.production69 = private constant [13 x i8] c"<identifier>\00"
@.production70 = private constant [2 x i8] c"*\00"
@.production71 = private constant [18 x i8] c"<rule-expression>\00"
@.production72 = private constant [13 x i8] c"<identifier>\00"
@.production73 = private constant [2 x i8] c"?\00"
@.production74 = private constant [18 x i8] c"<rule-expression>\00"
@.production75 = private constant [13 x i8] c"<identifier>\00"
@.production76 = private constant [2 x i8] c"+\00"
@.production77 = private constant [20 x i8] c"<string-expression>\00"
@.production78 = private constant [9 x i8] c"<string>\00"
@.production79 = private constant [20 x i8] c"<string-expression>\00"
@.production80 = private constant [13 x i8] c"<identifier>\00"
@.production81 = private constant [21 x i8] c"<integer-expression>\00"
@.production82 = private constant [10 x i8] c"<integer>\00"
@.production83 = private constant [21 x i8] c"<integer-expression>\00"
@.production84 = private constant [13 x i8] c"<identifier>\00"
@.production85 = private constant [21 x i8] c"<integer-expression>\00"
@.production86 = private constant [21 x i8] c"<integer-expression>\00"
@.production87 = private constant [2 x i8] c"+\00"
@.production88 = private constant [21 x i8] c"<integer-expression>\00"
@.production89 = private constant [21 x i8] c"<integer-expression>\00"
@.production90 = private constant [21 x i8] c"<integer-expression>\00"
@.production91 = private constant [2 x i8] c"-\00"
@.production92 = private constant [21 x i8] c"<integer-expression>\00"
@.production93 = private constant [20 x i8] c"<string-expression>\00"
@.production94 = private constant [20 x i8] c"<string-expression>\00"
@.production95 = private constant [2 x i8] c"+\00"
@.production96 = private constant [20 x i8] c"<string-expression>\00"
@.production97 = private constant [20 x i8] c"<string-expression>\00"
@.production98 = private constant [20 x i8] c"<string-expression>\00"
@.production99 = private constant [2 x i8] c"-\00"
@.production100 = private constant [20 x i8] c"<string-expression>\00"
@.production101 = private constant [20 x i8] c"<string-expression>\00"
@.production102 = private constant [13 x i8] c"<identifier>\00"
@.production103 = private constant [2 x i8] c".\00"
@.production104 = private constant [5 x i8] c"name\00"
@.production105 = private constant [20 x i8] c"<string-expression>\00"
@.production106 = private constant [9 x i8] c"language\00"
@.production107 = private constant [2 x i8] c".\00"
@.production108 = private constant [5 x i8] c"name\00"
@.production109 = private constant [20 x i8] c"<string-expression>\00"
@.production110 = private constant [12 x i8] c"ssi-counter\00"
@.production111 = private constant [20 x i8] c"<string-expression>\00"
@.production112 = private constant [13 x i8] c"<identifier>\00"
@.production113 = private constant [2 x i8] c".\00"
@.production114 = private constant [11 x i8] c"input-name\00"
@.production115 = private constant [20 x i8] c"<string-expression>\00"
@.production116 = private constant [21 x i8] c"<integer-expression>\00"
@.production117 = private constant [2 x i8] c".\00"
@.production118 = private constant [10 x i8] c"to-string\00"
@.production119 = private constant [20 x i8] c"<string-expression>\00"
@.production120 = private constant [20 x i8] c"<string-expression>\00"
@.production121 = private constant [2 x i8] c".\00"
@.production122 = private constant [7 x i8] c"length\00"
@.production123 = private constant [20 x i8] c"<string-expression>\00"
@.production124 = private constant [20 x i8] c"<string-expression>\00"
@.production125 = private constant [2 x i8] c".\00"
@.production126 = private constant [17 x i8] c"length-with-null\00"
@.production127 = private constant [20 x i8] c"<string-expression>\00"
@.production128 = private constant [20 x i8] c"<string-expression>\00"
@.production129 = private constant [2 x i8] c".\00"
@.production130 = private constant [11 x i8] c"lower-case\00"
@.production131 = private constant [20 x i8] c"<string-expression>\00"
@.production132 = private constant [20 x i8] c"<string-expression>\00"
@.production133 = private constant [2 x i8] c".\00"
@.production134 = private constant [15 x i8] c"quote-stripped\00"
@.production135 = private constant [20 x i8] c"<string-expression>\00"
@.production136 = private constant [20 x i8] c"<string-expression>\00"
@.production137 = private constant [2 x i8] c".\00"
@.production138 = private constant [14 x i8] c"regex-escaped\00"
@.production139 = private constant [20 x i8] c"<string-expression>\00"
@.production140 = private constant [20 x i8] c"<string-expression>\00"
@.production141 = private constant [2 x i8] c".\00"
@.production142 = private constant [21 x i8] c"double-regex-escaped\00"
@.production143 = private constant [20 x i8] c"<string-expression>\00"
@.production144 = private constant [20 x i8] c"<string-expression>\00"
@.production145 = private constant [2 x i8] c".\00"
@.production146 = private constant [10 x i8] c"unescaped\00"
@.production147 = private constant [20 x i8] c"<string-expression>\00"
@.production148 = private constant [20 x i8] c"<string-expression>\00"
@.production149 = private constant [2 x i8] c".\00"
@.production150 = private constant [13 x i8] c"llvm-escaped\00"
@.production151 = private constant [20 x i8] c"<string-expression>\00"
@.production152 = private constant [19 x i8] c"<array-expression>\00"
@.production153 = private constant [2 x i8] c"[\00"
@.production154 = private constant [21 x i8] c"<integer-expression>\00"
@.production155 = private constant [2 x i8] c"]\00"
@.production156 = private constant [19 x i8] c"<array-expression>\00"
@.production157 = private constant [9 x i8] c"language\00"
@.production158 = private constant [2 x i8] c".\00"
@.production159 = private constant [12 x i8] c"productions\00"
@.production160 = private constant [19 x i8] c"<array-expression>\00"
@.production161 = private constant [13 x i8] c"<identifier>\00"
@.production162 = private constant [2 x i8] c".\00"
@.production163 = private constant [12 x i8] c"productions\00"
@.production164 = private constant [19 x i8] c"<array-expression>\00"
@.production165 = private constant [9 x i8] c"language\00"
@.production166 = private constant [2 x i8] c".\00"
@.production167 = private constant [9 x i8] c"keywords\00"
@.production168 = private constant [19 x i8] c"<array-expression>\00"
@.production169 = private constant [13 x i8] c"<identifier>\00"
@.production170 = private constant [2 x i8] c".\00"
@.production171 = private constant [9 x i8] c"keywords\00"
@.production172 = private constant [19 x i8] c"<array-expression>\00"
@.production173 = private constant [9 x i8] c"language\00"
@.production174 = private constant [2 x i8] c".\00"
@.production175 = private constant [12 x i8] c"identifiers\00"
@.production176 = private constant [19 x i8] c"<array-expression>\00"
@.production177 = private constant [13 x i8] c"<identifier>\00"
@.production178 = private constant [2 x i8] c".\00"
@.production179 = private constant [12 x i8] c"identifiers\00"
@.production180 = private constant [19 x i8] c"<array-expression>\00"
@.production181 = private constant [9 x i8] c"language\00"
@.production182 = private constant [2 x i8] c".\00"
@.production183 = private constant [10 x i8] c"operators\00"
@.production184 = private constant [19 x i8] c"<array-expression>\00"
@.production185 = private constant [13 x i8] c"<identifier>\00"
@.production186 = private constant [2 x i8] c".\00"
@.production187 = private constant [10 x i8] c"operators\00"
@.production188 = private constant [19 x i8] c"<array-expression>\00"
@.production189 = private constant [9 x i8] c"language\00"
@.production190 = private constant [2 x i8] c".\00"
@.production191 = private constant [12 x i8] c"terminators\00"
@.production192 = private constant [19 x i8] c"<array-expression>\00"
@.production193 = private constant [13 x i8] c"<identifier>\00"
@.production194 = private constant [2 x i8] c".\00"
@.production195 = private constant [12 x i8] c"terminators\00"
@.production196 = private constant [19 x i8] c"<array-expression>\00"
@.production197 = private constant [9 x i8] c"language\00"
@.production198 = private constant [2 x i8] c".\00"
@.production199 = private constant [11 x i8] c"separators\00"
@.production200 = private constant [19 x i8] c"<array-expression>\00"
@.production201 = private constant [13 x i8] c"<identifier>\00"
@.production202 = private constant [2 x i8] c".\00"
@.production203 = private constant [11 x i8] c"separators\00"
@.production204 = private constant [19 x i8] c"<array-expression>\00"
@.production205 = private constant [9 x i8] c"language\00"
@.production206 = private constant [2 x i8] c".\00"
@.production207 = private constant [8 x i8] c"strings\00"
@.production208 = private constant [19 x i8] c"<array-expression>\00"
@.production209 = private constant [13 x i8] c"<identifier>\00"
@.production210 = private constant [2 x i8] c".\00"
@.production211 = private constant [8 x i8] c"strings\00"
@.production212 = private constant [19 x i8] c"<array-expression>\00"
@.production213 = private constant [9 x i8] c"language\00"
@.production214 = private constant [2 x i8] c".\00"
@.production215 = private constant [7 x i8] c"quotes\00"
@.production216 = private constant [19 x i8] c"<array-expression>\00"
@.production217 = private constant [13 x i8] c"<identifier>\00"
@.production218 = private constant [2 x i8] c".\00"
@.production219 = private constant [7 x i8] c"quotes\00"
@.production220 = private constant [19 x i8] c"<array-expression>\00"
@.production221 = private constant [9 x i8] c"language\00"
@.production222 = private constant [2 x i8] c".\00"
@.production223 = private constant [8 x i8] c"lexemes\00"
@.production224 = private constant [19 x i8] c"<array-expression>\00"
@.production225 = private constant [13 x i8] c"<identifier>\00"
@.production226 = private constant [2 x i8] c".\00"
@.production227 = private constant [8 x i8] c"lexemes\00"
@.production228 = private constant [19 x i8] c"<array-expression>\00"
@.production229 = private constant [9 x i8] c"language\00"
@.production230 = private constant [2 x i8] c".\00"
@.production231 = private constant [14 x i8] c"line-comments\00"
@.production232 = private constant [19 x i8] c"<array-expression>\00"
@.production233 = private constant [13 x i8] c"<identifier>\00"
@.production234 = private constant [2 x i8] c".\00"
@.production235 = private constant [14 x i8] c"line-comments\00"
@.production236 = private constant [19 x i8] c"<array-expression>\00"
@.production237 = private constant [9 x i8] c"language\00"
@.production238 = private constant [2 x i8] c".\00"
@.production239 = private constant [15 x i8] c"block-comments\00"
@.production240 = private constant [19 x i8] c"<array-expression>\00"
@.production241 = private constant [13 x i8] c"<identifier>\00"
@.production242 = private constant [2 x i8] c".\00"
@.production243 = private constant [15 x i8] c"block-comments\00"
@.production244 = private constant [19 x i8] c"<array-expression>\00"
@.production245 = private constant [9 x i8] c"language\00"
@.production246 = private constant [2 x i8] c".\00"
@.production247 = private constant [7 x i8] c"passes\00"
@.production248 = private constant [19 x i8] c"<array-expression>\00"
@.production249 = private constant [13 x i8] c"<identifier>\00"
@.production250 = private constant [2 x i8] c".\00"
@.production251 = private constant [7 x i8] c"passes\00"
@.production252 = private constant [19 x i8] c"<array-expression>\00"
@.production253 = private constant [13 x i8] c"<identifier>\00"
@.production254 = private constant [2 x i8] c".\00"
@.production255 = private constant [6 x i8] c"names\00"
@.production256 = private constant [19 x i8] c"<array-expression>\00"
@.production257 = private constant [13 x i8] c"<identifier>\00"
@.production258 = private constant [21 x i8] c"<boolean-expression>\00"
@.production259 = private constant [20 x i8] c"<string-expression>\00"
@.production260 = private constant [3 x i8] c"==\00"
@.production261 = private constant [20 x i8] c"<string-expression>\00"
@.production262 = private constant [21 x i8] c"<boolean-expression>\00"
@.production263 = private constant [21 x i8] c"<integer-expression>\00"
@.production264 = private constant [3 x i8] c"==\00"
@.production265 = private constant [21 x i8] c"<integer-expression>\00"
@.production266 = private constant [21 x i8] c"<boolean-expression>\00"
@.production267 = private constant [21 x i8] c"<boolean-expression>\00"
@.production268 = private constant [3 x i8] c"==\00"
@.production269 = private constant [21 x i8] c"<boolean-expression>\00"
@.production270 = private constant [21 x i8] c"<boolean-expression>\00"
@.production271 = private constant [13 x i8] c"<identifier>\00"
@.production272 = private constant [2 x i8] c".\00"
@.production273 = private constant [12 x i8] c"is-optional\00"
@.production274 = private constant [21 x i8] c"<boolean-expression>\00"
@.production275 = private constant [13 x i8] c"<identifier>\00"
@.production276 = private constant [2 x i8] c".\00"
@.production277 = private constant [13 x i8] c"is-non-empty\00"
@.production278 = private constant [21 x i8] c"<boolean-expression>\00"
@.production279 = private constant [13 x i8] c"<identifier>\00"
@.production280 = private constant [2 x i8] c".\00"
@.production281 = private constant [8 x i8] c"is-list\00"
@.production282 = private constant [21 x i8] c"<boolean-expression>\00"
@.production283 = private constant [5 x i8] c"true\00"
@.production284 = private constant [21 x i8] c"<boolean-expression>\00"
@.production285 = private constant [6 x i8] c"false\00"
@.production286 = private constant [21 x i8] c"<boolean-expression>\00"
@.production287 = private constant [13 x i8] c"<identifier>\00"
@.production288 = private constant [19 x i8] c"<parse-expression>\00"
@.production289 = private constant [13 x i8] c"<identifier>\00"
@.production290 = private constant [2 x i8] c".\00"
@.production291 = private constant [6 x i8] c"parse\00"
@.production292 = private constant [19 x i8] c"<parse-expression>\00"
@.production293 = private constant [13 x i8] c"<identifier>\00"
@.pass_cpp = private constant [4 x i8] c"cpp\00"
@.pass_llvm = private constant [5 x i8] c"llvm\00"
@.pass_cbnf = private constant [5 x i8] c"cbnf\00"
@.pass_vscode = private constant [7 x i8] c"vscode\00"

define ccc i32 @main(i32 %argumentCount, i8** %argumentList) nounwind
{
	%1 = call i32 @puts(i8* getelementptr inbounds ([32 x i8]* @.message1, i32 0, i32 0))
	%2 = call i32 @puts(i8* getelementptr inbounds ([67 x i8]* @.message2, i32 0, i32 0))
	%3 = call i32 @clParseCommandLine(i32 %argumentCount, i8** %argumentList)
	%4 = call i32 @clHasSwitch(i8* getelementptr inbounds ([2 x i8]* @.outputSwitchShort, i32 0, i32 0))
	%5 = icmp ne i32 %4, 0
	br i1 %5, label %hasOutputFile, label %noOutputFile
noOutputFile:
	%6 = call i32 @puts(i8* getelementptr inbounds ([42 x i8]* @.error1002, i32 0, i32 0))
	ret i32 -1
hasOutputFile:
	%7 = call i8* @clMapSwitch(i8* getelementptr inbounds ([2 x i8]* @.outputSwitchShort, i32 0, i32 0))
	%8 = call i32 @clFileCount()
	%9 = icmp ne i32 %8, 0
	br i1 %9, label %hasFiles, label %noFiles
noFiles:
	%10 = call i32 @puts(i8* getelementptr inbounds ([43 x i8]* @.error1001, i32 0, i32 0))
	ret i32 -1
hasFiles:
	%11 = call i32 @clLexerLineComment(i8* getelementptr inbounds ([3 x i8]* @.comment1, i32 0, i32 0))
	%12 = call i32 @clLexerBlockComment(i8* getelementptr inbounds ([3 x i8]* @.blockComment1, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.blockComment2, i32 0, i32 0))
	%13 = call i32 @clLexerQuote(i8* getelementptr inbounds ([7 x i8]* @.quote1, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.quote2, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.quote3, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.quote4, i32 0, i32 0))
	%14 = call i32 @clLexerRule(i8* getelementptr inbounds ([9 x i8]* @.rule1, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.rule1, i32 0, i32 0))
	%15 = call i32 @clLexerRule(i8* getelementptr inbounds ([12 x i8]* @.rule2, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @.rule2, i32 0, i32 0))
	%16 = call i32 @clLexerRule(i8* getelementptr inbounds ([10 x i8]* @.rule3, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.rule3, i32 0, i32 0))
	%17 = call i32 @clLexerRule(i8* getelementptr inbounds ([11 x i8]* @.rule4, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.rule4, i32 0, i32 0))
	%18 = call i32 @clLexerRule(i8* getelementptr inbounds ([12 x i8]* @.rule5, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @.rule5, i32 0, i32 0))
	%19 = call i32 @clLexerRule(i8* getelementptr inbounds ([8 x i8]* @.rule6, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.rule6, i32 0, i32 0))
	%20 = call i32 @clLexerRule(i8* getelementptr inbounds ([9 x i8]* @.rule7, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.rule7, i32 0, i32 0))
	%21 = call i32 @clLexerRule(i8* getelementptr inbounds ([8 x i8]* @.rule8, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.rule8, i32 0, i32 0))
	%22 = call i32 @clLexerRule(i8* getelementptr inbounds ([6 x i8]* @.rule9, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.rule9, i32 0, i32 0))
	%23 = call i32 @clLexerRule(i8* getelementptr inbounds ([7 x i8]* @.rule10, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.rule10, i32 0, i32 0))
	%24 = call i32 @clLexerRule(i8* getelementptr inbounds ([5 x i8]* @.rule11, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.rule11, i32 0, i32 0))
	%25 = call i32 @clLexerRule(i8* getelementptr inbounds ([9 x i8]* @.rule12, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.rule12, i32 0, i32 0))
	%26 = call i32 @clLexerRule(i8* getelementptr inbounds ([7 x i8]* @.rule13, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.rule13, i32 0, i32 0))
	%27 = call i32 @clLexerRule(i8* getelementptr inbounds ([7 x i8]* @.rule14, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.rule14, i32 0, i32 0))
	%28 = call i32 @clLexerRule(i8* getelementptr inbounds ([6 x i8]* @.rule15, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.rule15, i32 0, i32 0))
	%29 = call i32 @clLexerRule(i8* getelementptr inbounds ([5 x i8]* @.rule16, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.rule16, i32 0, i32 0))
	%30 = call i32 @clLexerRule(i8* getelementptr inbounds ([4 x i8]* @.rule17, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.rule17, i32 0, i32 0))
	%31 = call i32 @clLexerRule(i8* getelementptr inbounds ([5 x i8]* @.rule18, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.rule18, i32 0, i32 0))
	%32 = call i32 @clLexerRule(i8* getelementptr inbounds ([3 x i8]* @.rule19, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.rule19, i32 0, i32 0))
	%33 = call i32 @clLexerRule(i8* getelementptr inbounds ([12 x i8]* @.rule20, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @.rule20, i32 0, i32 0))
	%34 = call i32 @clLexerRule(i8* getelementptr inbounds ([6 x i8]* @.rule21, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.rule21, i32 0, i32 0))
	%35 = call i32 @clLexerRule(i8* getelementptr inbounds ([12 x i8]* @.rule22, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @.rule22, i32 0, i32 0))
	%36 = call i32 @clLexerRule(i8* getelementptr inbounds ([13 x i8]* @.rule23, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.rule23, i32 0, i32 0))
	%37 = call i32 @clLexerRule(i8* getelementptr inbounds ([8 x i8]* @.rule24, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.rule24, i32 0, i32 0))
	%38 = call i32 @clLexerRule(i8* getelementptr inbounds ([5 x i8]* @.rule25, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.rule25, i32 0, i32 0))
	%39 = call i32 @clLexerRule(i8* getelementptr inbounds ([6 x i8]* @.rule26, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.rule26, i32 0, i32 0))
	%40 = call i32 @clLexerRule(i8* getelementptr inbounds ([11 x i8]* @.rule27, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.rule27, i32 0, i32 0))
	%41 = call i32 @clLexerRule(i8* getelementptr inbounds ([7 x i8]* @.rule28, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.rule28, i32 0, i32 0))
	%42 = call i32 @clLexerRule(i8* getelementptr inbounds ([8 x i8]* @.rule29, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.rule29, i32 0, i32 0))
	%43 = call i32 @clLexerRule(i8* getelementptr inbounds ([15 x i8]* @.rule30, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.rule30, i32 0, i32 0))
	%44 = call i32 @clLexerRule(i8* getelementptr inbounds ([14 x i8]* @.rule31, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.rule31, i32 0, i32 0))
	%45 = call i32 @clLexerRule(i8* getelementptr inbounds ([7 x i8]* @.rule32, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.rule32, i32 0, i32 0))
	%46 = call i32 @clLexerRule(i8* getelementptr inbounds ([6 x i8]* @.rule33, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.rule33, i32 0, i32 0))
	%47 = call i32 @clLexerRule(i8* getelementptr inbounds ([5 x i8]* @.rule34, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.rule34, i32 0, i32 0))
	%48 = call i32 @clLexerRule(i8* getelementptr inbounds ([3 x i8]* @.rule35, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.rule35, i32 0, i32 0))
	%49 = call i32 @clLexerRule(i8* getelementptr inbounds ([11 x i8]* @.rule36, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.rule36, i32 0, i32 0))
	%50 = call i32 @clLexerRule(i8* getelementptr inbounds ([15 x i8]* @.rule37, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.rule37, i32 0, i32 0))
	%51 = call i32 @clLexerRule(i8* getelementptr inbounds ([14 x i8]* @.rule38, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.rule38, i32 0, i32 0))
	%52 = call i32 @clLexerRule(i8* getelementptr inbounds ([21 x i8]* @.rule39, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @.rule39, i32 0, i32 0))
	%53 = call i32 @clLexerRule(i8* getelementptr inbounds ([10 x i8]* @.rule40, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.rule40, i32 0, i32 0))
	%54 = call i32 @clLexerRule(i8* getelementptr inbounds ([12 x i8]* @.rule41, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @.rule41, i32 0, i32 0))
	%55 = call i32 @clLexerRule(i8* getelementptr inbounds ([7 x i8]* @.rule42, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.rule42, i32 0, i32 0))
	%56 = call i32 @clLexerRule(i8* getelementptr inbounds ([17 x i8]* @.rule43, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @.rule43, i32 0, i32 0))
	%57 = call i32 @clLexerRule(i8* getelementptr inbounds ([10 x i8]* @.rule44, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.rule44, i32 0, i32 0))
	%58 = call i32 @clLexerRule(i8* getelementptr inbounds ([13 x i8]* @.rule45, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8]* @.rule46, i32 0, i32 0))
	%59 = call i32 @clLexerRule(i8* getelementptr inbounds ([10 x i8]* @.rule47, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.rule48, i32 0, i32 0))
	%60 = call i32 @clLexerRule(i8* getelementptr inbounds ([2 x i8]* @.rule49, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.rule50, i32 0, i32 0))
	%61 = call i32 @clLexerRule(i8* getelementptr inbounds ([2 x i8]* @.rule51, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.rule52, i32 0, i32 0))
	%62 = call i32 @clLexerRule(i8* getelementptr inbounds ([2 x i8]* @.rule53, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.rule54, i32 0, i32 0))
	%63 = call i32 @clLexerRule(i8* getelementptr inbounds ([2 x i8]* @.rule55, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.rule56, i32 0, i32 0))
	%64 = call i32 @clLexerRule(i8* getelementptr inbounds ([2 x i8]* @.rule57, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.rule58, i32 0, i32 0))
	%65 = call i32 @clLexerRule(i8* getelementptr inbounds ([2 x i8]* @.rule59, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.rule60, i32 0, i32 0))
	%66 = call i32 @clLexerRule(i8* getelementptr inbounds ([2 x i8]* @.rule61, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.rule62, i32 0, i32 0))
	%67 = call i32 @clLexerRule(i8* getelementptr inbounds ([2 x i8]* @.rule63, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.rule64, i32 0, i32 0))
	%68 = call i32 @clLexerRule(i8* getelementptr inbounds ([2 x i8]* @.rule65, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.rule66, i32 0, i32 0))
	%69 = call i32 @clLexerRule(i8* getelementptr inbounds ([2 x i8]* @.rule67, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.rule68, i32 0, i32 0))
	%70 = call i32 @clLexerRule(i8* getelementptr inbounds ([3 x i8]* @.rule69, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.rule70, i32 0, i32 0))
	%71 = call i32 @clLexerRule(i8* getelementptr inbounds ([2 x i8]* @.rule71, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.rule72, i32 0, i32 0))
	%72 = call i32 @puts(i8* getelementptr inbounds ([16 x i8]* @.message3, i32 0, i32 0))
	br label %lexHeader
lexHeader:
	br label %lexNextFile
lexNextFile:
	%73 = phi i32 [0, %lexHeader], [%74, %lexNextFile]
	%74 = add i32 %73, 1
	%75 = call i8* @clGetFile(i32 %73)
	%76 = call i32 @puts(i8* %75)
	%77 = call i32 @clLex(i8* %75)
	%78 = icmp slt i32 %74, %8
	br i1 %78, label %lexNextFile, label %lexDone
lexDone:
	%79 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([12 x i8]* @.production2, i32 0, i32 0), i8 1, i8 0, i8 0)
	%80 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([10 x i8]* @.production1, i32 0, i32 0))
	%81 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production4, i32 0, i32 0), i8 0, i8 0, i8 0)
	%82 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([12 x i8]* @.production3, i32 0, i32 0))
	%83 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([9 x i8]* @.production6, i32 0, i32 0), i8 0, i8 0, i8 0)
	%84 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([16 x i8]* @.production7, i32 0, i32 0), i8 0, i8 0, i8 0)
	%85 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([12 x i8]* @.production5, i32 0, i32 0))
	%86 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([12 x i8]* @.production9, i32 0, i32 0), i8 0, i8 0, i8 0)
	%87 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([16 x i8]* @.production10, i32 0, i32 0), i8 0, i8 0, i8 0)
	%88 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([12 x i8]* @.production8, i32 0, i32 0))
	%89 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([10 x i8]* @.production12, i32 0, i32 0), i8 0, i8 0, i8 0)
	%90 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([16 x i8]* @.production13, i32 0, i32 0), i8 0, i8 0, i8 0)
	%91 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([12 x i8]* @.production11, i32 0, i32 0))
	%92 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([11 x i8]* @.production15, i32 0, i32 0), i8 0, i8 0, i8 0)
	%93 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([16 x i8]* @.production16, i32 0, i32 0), i8 0, i8 0, i8 0)
	%94 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([12 x i8]* @.production14, i32 0, i32 0))
	%95 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([12 x i8]* @.production18, i32 0, i32 0), i8 0, i8 0, i8 0)
	%96 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([16 x i8]* @.production19, i32 0, i32 0), i8 0, i8 0, i8 0)
	%97 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([12 x i8]* @.production17, i32 0, i32 0))
	%98 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([8 x i8]* @.production21, i32 0, i32 0), i8 0, i8 0, i8 0)
	%99 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([16 x i8]* @.production22, i32 0, i32 0), i8 0, i8 0, i8 0)
	%100 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([12 x i8]* @.production20, i32 0, i32 0))
	%101 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([18 x i8]* @.production24, i32 0, i32 0), i8 0, i8 0, i8 0)
	%102 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([12 x i8]* @.production23, i32 0, i32 0))
	%103 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production26, i32 0, i32 0), i8 0, i8 0, i8 0)
	%104 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([11 x i8]* @.production27, i32 0, i32 0), i8 1, i8 0, i8 0)
	%105 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production28, i32 0, i32 0), i8 0, i8 0, i8 0)
	%106 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([16 x i8]* @.production25, i32 0, i32 0))
	%107 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production30, i32 0, i32 0), i8 0, i8 0, i8 0)
	%108 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([11 x i8]* @.production29, i32 0, i32 0))
	%109 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([9 x i8]* @.production32, i32 0, i32 0), i8 0, i8 0, i8 0)
	%110 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([11 x i8]* @.production31, i32 0, i32 0))
	%111 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([8 x i8]* @.production34, i32 0, i32 0), i8 0, i8 0, i8 0)
	%112 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([9 x i8]* @.production35, i32 0, i32 0), i8 0, i8 0, i8 0)
	%113 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production36, i32 0, i32 0), i8 0, i8 0, i8 0)
	%114 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([13 x i8]* @.production33, i32 0, i32 0))
	%115 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([8 x i8]* @.production38, i32 0, i32 0), i8 0, i8 0, i8 0)
	%116 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([9 x i8]* @.production39, i32 0, i32 0), i8 0, i8 0, i8 0)
	%117 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([9 x i8]* @.production40, i32 0, i32 0), i8 0, i8 0, i8 0)
	%118 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production41, i32 0, i32 0), i8 0, i8 0, i8 0)
	%119 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([13 x i8]* @.production37, i32 0, i32 0))
	%120 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([6 x i8]* @.production43, i32 0, i32 0), i8 0, i8 0, i8 0)
	%121 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production44, i32 0, i32 0), i8 0, i8 0, i8 0)
	%122 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([9 x i8]* @.production45, i32 0, i32 0), i8 0, i8 0, i8 0)
	%123 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([9 x i8]* @.production46, i32 0, i32 0), i8 0, i8 0, i8 0)
	%124 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([9 x i8]* @.production47, i32 0, i32 0), i8 0, i8 0, i8 0)
	%125 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production48, i32 0, i32 0), i8 0, i8 0, i8 0)
	%126 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([13 x i8]* @.production42, i32 0, i32 0))
	%127 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([7 x i8]* @.production50, i32 0, i32 0), i8 0, i8 0, i8 0)
	%128 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production51, i32 0, i32 0), i8 0, i8 0, i8 0)
	%129 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([9 x i8]* @.production52, i32 0, i32 0), i8 0, i8 0, i8 0)
	%130 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production53, i32 0, i32 0), i8 0, i8 0, i8 0)
	%131 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([13 x i8]* @.production49, i32 0, i32 0))
	%132 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production55, i32 0, i32 0), i8 0, i8 0, i8 0)
	%133 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production56, i32 0, i32 0), i8 0, i8 0, i8 0)
	%134 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([18 x i8]* @.production57, i32 0, i32 0), i8 1, i8 0, i8 0)
	%135 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production58, i32 0, i32 0), i8 0, i8 0, i8 0)
	%136 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([13 x i8]* @.production54, i32 0, i32 0))
	%137 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production60, i32 0, i32 0), i8 0, i8 0, i8 0)
	%138 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production61, i32 0, i32 0), i8 0, i8 0, i8 0)
	%139 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([4 x i8]* @.production62, i32 0, i32 0), i8 0, i8 0, i8 0)
	%140 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production63, i32 0, i32 0), i8 0, i8 0, i8 0)
	%141 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([13 x i8]* @.production59, i32 0, i32 0))
	%142 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([9 x i8]* @.production65, i32 0, i32 0), i8 0, i8 0, i8 0)
	%143 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([18 x i8]* @.production64, i32 0, i32 0))
	%144 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production67, i32 0, i32 0), i8 0, i8 0, i8 0)
	%145 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([18 x i8]* @.production66, i32 0, i32 0))
	%146 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production69, i32 0, i32 0), i8 0, i8 0, i8 0)
	%147 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production70, i32 0, i32 0), i8 0, i8 0, i8 0)
	%148 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([18 x i8]* @.production68, i32 0, i32 0))
	%149 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production72, i32 0, i32 0), i8 0, i8 0, i8 0)
	%150 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production73, i32 0, i32 0), i8 0, i8 0, i8 0)
	%151 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([18 x i8]* @.production71, i32 0, i32 0))
	%152 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production75, i32 0, i32 0), i8 0, i8 0, i8 0)
	%153 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production76, i32 0, i32 0), i8 0, i8 0, i8 0)
	%154 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([18 x i8]* @.production74, i32 0, i32 0))
	%155 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([9 x i8]* @.production78, i32 0, i32 0), i8 0, i8 0, i8 0)
	%156 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([20 x i8]* @.production77, i32 0, i32 0))
	%157 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production80, i32 0, i32 0), i8 0, i8 0, i8 0)
	%158 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([20 x i8]* @.production79, i32 0, i32 0))
	%159 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([10 x i8]* @.production82, i32 0, i32 0), i8 0, i8 0, i8 0)
	%160 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([21 x i8]* @.production81, i32 0, i32 0))
	%161 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production84, i32 0, i32 0), i8 0, i8 0, i8 0)
	%162 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([21 x i8]* @.production83, i32 0, i32 0))
	%163 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([21 x i8]* @.production86, i32 0, i32 0), i8 0, i8 0, i8 0)
	%164 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production87, i32 0, i32 0), i8 0, i8 0, i8 0)
	%165 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([21 x i8]* @.production88, i32 0, i32 0), i8 0, i8 0, i8 0)
	%166 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([21 x i8]* @.production85, i32 0, i32 0))
	%167 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([21 x i8]* @.production90, i32 0, i32 0), i8 0, i8 0, i8 0)
	%168 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production91, i32 0, i32 0), i8 0, i8 0, i8 0)
	%169 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([21 x i8]* @.production92, i32 0, i32 0), i8 0, i8 0, i8 0)
	%170 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([21 x i8]* @.production89, i32 0, i32 0))
	%171 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([20 x i8]* @.production94, i32 0, i32 0), i8 0, i8 0, i8 0)
	%172 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production95, i32 0, i32 0), i8 0, i8 0, i8 0)
	%173 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([20 x i8]* @.production96, i32 0, i32 0), i8 0, i8 0, i8 0)
	%174 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([20 x i8]* @.production93, i32 0, i32 0))
	%175 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([20 x i8]* @.production98, i32 0, i32 0), i8 0, i8 0, i8 0)
	%176 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production99, i32 0, i32 0), i8 0, i8 0, i8 0)
	%177 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([20 x i8]* @.production100, i32 0, i32 0), i8 0, i8 0, i8 0)
	%178 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([20 x i8]* @.production97, i32 0, i32 0))
	%179 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production102, i32 0, i32 0), i8 0, i8 0, i8 0)
	%180 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production103, i32 0, i32 0), i8 0, i8 0, i8 0)
	%181 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([5 x i8]* @.production104, i32 0, i32 0), i8 0, i8 0, i8 0)
	%182 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([20 x i8]* @.production101, i32 0, i32 0))
	%183 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([9 x i8]* @.production106, i32 0, i32 0), i8 0, i8 0, i8 0)
	%184 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production107, i32 0, i32 0), i8 0, i8 0, i8 0)
	%185 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([5 x i8]* @.production108, i32 0, i32 0), i8 0, i8 0, i8 0)
	%186 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([20 x i8]* @.production105, i32 0, i32 0))
	%187 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([12 x i8]* @.production110, i32 0, i32 0), i8 0, i8 0, i8 0)
	%188 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([20 x i8]* @.production109, i32 0, i32 0))
	%189 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production112, i32 0, i32 0), i8 0, i8 0, i8 0)
	%190 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production113, i32 0, i32 0), i8 0, i8 0, i8 0)
	%191 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([11 x i8]* @.production114, i32 0, i32 0), i8 0, i8 0, i8 0)
	%192 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([20 x i8]* @.production111, i32 0, i32 0))
	%193 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([21 x i8]* @.production116, i32 0, i32 0), i8 0, i8 0, i8 0)
	%194 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production117, i32 0, i32 0), i8 0, i8 0, i8 0)
	%195 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([10 x i8]* @.production118, i32 0, i32 0), i8 0, i8 0, i8 0)
	%196 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([20 x i8]* @.production115, i32 0, i32 0))
	%197 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([20 x i8]* @.production120, i32 0, i32 0), i8 0, i8 0, i8 0)
	%198 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production121, i32 0, i32 0), i8 0, i8 0, i8 0)
	%199 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([7 x i8]* @.production122, i32 0, i32 0), i8 0, i8 0, i8 0)
	%200 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([20 x i8]* @.production119, i32 0, i32 0))
	%201 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([20 x i8]* @.production124, i32 0, i32 0), i8 0, i8 0, i8 0)
	%202 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production125, i32 0, i32 0), i8 0, i8 0, i8 0)
	%203 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([17 x i8]* @.production126, i32 0, i32 0), i8 0, i8 0, i8 0)
	%204 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([20 x i8]* @.production123, i32 0, i32 0))
	%205 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([20 x i8]* @.production128, i32 0, i32 0), i8 0, i8 0, i8 0)
	%206 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production129, i32 0, i32 0), i8 0, i8 0, i8 0)
	%207 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([11 x i8]* @.production130, i32 0, i32 0), i8 0, i8 0, i8 0)
	%208 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([20 x i8]* @.production127, i32 0, i32 0))
	%209 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([20 x i8]* @.production132, i32 0, i32 0), i8 0, i8 0, i8 0)
	%210 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production133, i32 0, i32 0), i8 0, i8 0, i8 0)
	%211 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([15 x i8]* @.production134, i32 0, i32 0), i8 0, i8 0, i8 0)
	%212 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([20 x i8]* @.production131, i32 0, i32 0))
	%213 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([20 x i8]* @.production136, i32 0, i32 0), i8 0, i8 0, i8 0)
	%214 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production137, i32 0, i32 0), i8 0, i8 0, i8 0)
	%215 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([14 x i8]* @.production138, i32 0, i32 0), i8 0, i8 0, i8 0)
	%216 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([20 x i8]* @.production135, i32 0, i32 0))
	%217 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([20 x i8]* @.production140, i32 0, i32 0), i8 0, i8 0, i8 0)
	%218 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production141, i32 0, i32 0), i8 0, i8 0, i8 0)
	%219 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([21 x i8]* @.production142, i32 0, i32 0), i8 0, i8 0, i8 0)
	%220 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([20 x i8]* @.production139, i32 0, i32 0))
	%221 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([20 x i8]* @.production144, i32 0, i32 0), i8 0, i8 0, i8 0)
	%222 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production145, i32 0, i32 0), i8 0, i8 0, i8 0)
	%223 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([10 x i8]* @.production146, i32 0, i32 0), i8 0, i8 0, i8 0)
	%224 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([20 x i8]* @.production143, i32 0, i32 0))
	%225 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([20 x i8]* @.production148, i32 0, i32 0), i8 0, i8 0, i8 0)
	%226 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production149, i32 0, i32 0), i8 0, i8 0, i8 0)
	%227 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production150, i32 0, i32 0), i8 0, i8 0, i8 0)
	%228 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([20 x i8]* @.production147, i32 0, i32 0))
	%229 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([19 x i8]* @.production152, i32 0, i32 0), i8 0, i8 0, i8 0)
	%230 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production153, i32 0, i32 0), i8 0, i8 0, i8 0)
	%231 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([21 x i8]* @.production154, i32 0, i32 0), i8 0, i8 0, i8 0)
	%232 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production155, i32 0, i32 0), i8 0, i8 0, i8 0)
	%233 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([20 x i8]* @.production151, i32 0, i32 0))
	%234 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([9 x i8]* @.production157, i32 0, i32 0), i8 0, i8 0, i8 0)
	%235 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production158, i32 0, i32 0), i8 0, i8 0, i8 0)
	%236 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([12 x i8]* @.production159, i32 0, i32 0), i8 0, i8 0, i8 0)
	%237 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([19 x i8]* @.production156, i32 0, i32 0))
	%238 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production161, i32 0, i32 0), i8 0, i8 0, i8 0)
	%239 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production162, i32 0, i32 0), i8 0, i8 0, i8 0)
	%240 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([12 x i8]* @.production163, i32 0, i32 0), i8 0, i8 0, i8 0)
	%241 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([19 x i8]* @.production160, i32 0, i32 0))
	%242 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([9 x i8]* @.production165, i32 0, i32 0), i8 0, i8 0, i8 0)
	%243 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production166, i32 0, i32 0), i8 0, i8 0, i8 0)
	%244 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([9 x i8]* @.production167, i32 0, i32 0), i8 0, i8 0, i8 0)
	%245 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([19 x i8]* @.production164, i32 0, i32 0))
	%246 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production169, i32 0, i32 0), i8 0, i8 0, i8 0)
	%247 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production170, i32 0, i32 0), i8 0, i8 0, i8 0)
	%248 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([9 x i8]* @.production171, i32 0, i32 0), i8 0, i8 0, i8 0)
	%249 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([19 x i8]* @.production168, i32 0, i32 0))
	%250 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([9 x i8]* @.production173, i32 0, i32 0), i8 0, i8 0, i8 0)
	%251 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production174, i32 0, i32 0), i8 0, i8 0, i8 0)
	%252 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([12 x i8]* @.production175, i32 0, i32 0), i8 0, i8 0, i8 0)
	%253 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([19 x i8]* @.production172, i32 0, i32 0))
	%254 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production177, i32 0, i32 0), i8 0, i8 0, i8 0)
	%255 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production178, i32 0, i32 0), i8 0, i8 0, i8 0)
	%256 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([12 x i8]* @.production179, i32 0, i32 0), i8 0, i8 0, i8 0)
	%257 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([19 x i8]* @.production176, i32 0, i32 0))
	%258 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([9 x i8]* @.production181, i32 0, i32 0), i8 0, i8 0, i8 0)
	%259 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production182, i32 0, i32 0), i8 0, i8 0, i8 0)
	%260 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([10 x i8]* @.production183, i32 0, i32 0), i8 0, i8 0, i8 0)
	%261 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([19 x i8]* @.production180, i32 0, i32 0))
	%262 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production185, i32 0, i32 0), i8 0, i8 0, i8 0)
	%263 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production186, i32 0, i32 0), i8 0, i8 0, i8 0)
	%264 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([10 x i8]* @.production187, i32 0, i32 0), i8 0, i8 0, i8 0)
	%265 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([19 x i8]* @.production184, i32 0, i32 0))
	%266 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([9 x i8]* @.production189, i32 0, i32 0), i8 0, i8 0, i8 0)
	%267 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production190, i32 0, i32 0), i8 0, i8 0, i8 0)
	%268 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([12 x i8]* @.production191, i32 0, i32 0), i8 0, i8 0, i8 0)
	%269 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([19 x i8]* @.production188, i32 0, i32 0))
	%270 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production193, i32 0, i32 0), i8 0, i8 0, i8 0)
	%271 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production194, i32 0, i32 0), i8 0, i8 0, i8 0)
	%272 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([12 x i8]* @.production195, i32 0, i32 0), i8 0, i8 0, i8 0)
	%273 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([19 x i8]* @.production192, i32 0, i32 0))
	%274 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([9 x i8]* @.production197, i32 0, i32 0), i8 0, i8 0, i8 0)
	%275 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production198, i32 0, i32 0), i8 0, i8 0, i8 0)
	%276 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([11 x i8]* @.production199, i32 0, i32 0), i8 0, i8 0, i8 0)
	%277 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([19 x i8]* @.production196, i32 0, i32 0))
	%278 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production201, i32 0, i32 0), i8 0, i8 0, i8 0)
	%279 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production202, i32 0, i32 0), i8 0, i8 0, i8 0)
	%280 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([11 x i8]* @.production203, i32 0, i32 0), i8 0, i8 0, i8 0)
	%281 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([19 x i8]* @.production200, i32 0, i32 0))
	%282 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([9 x i8]* @.production205, i32 0, i32 0), i8 0, i8 0, i8 0)
	%283 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production206, i32 0, i32 0), i8 0, i8 0, i8 0)
	%284 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([8 x i8]* @.production207, i32 0, i32 0), i8 0, i8 0, i8 0)
	%285 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([19 x i8]* @.production204, i32 0, i32 0))
	%286 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production209, i32 0, i32 0), i8 0, i8 0, i8 0)
	%287 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production210, i32 0, i32 0), i8 0, i8 0, i8 0)
	%288 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([8 x i8]* @.production211, i32 0, i32 0), i8 0, i8 0, i8 0)
	%289 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([19 x i8]* @.production208, i32 0, i32 0))
	%290 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([9 x i8]* @.production213, i32 0, i32 0), i8 0, i8 0, i8 0)
	%291 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production214, i32 0, i32 0), i8 0, i8 0, i8 0)
	%292 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([7 x i8]* @.production215, i32 0, i32 0), i8 0, i8 0, i8 0)
	%293 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([19 x i8]* @.production212, i32 0, i32 0))
	%294 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production217, i32 0, i32 0), i8 0, i8 0, i8 0)
	%295 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production218, i32 0, i32 0), i8 0, i8 0, i8 0)
	%296 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([7 x i8]* @.production219, i32 0, i32 0), i8 0, i8 0, i8 0)
	%297 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([19 x i8]* @.production216, i32 0, i32 0))
	%298 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([9 x i8]* @.production221, i32 0, i32 0), i8 0, i8 0, i8 0)
	%299 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production222, i32 0, i32 0), i8 0, i8 0, i8 0)
	%300 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([8 x i8]* @.production223, i32 0, i32 0), i8 0, i8 0, i8 0)
	%301 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([19 x i8]* @.production220, i32 0, i32 0))
	%302 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production225, i32 0, i32 0), i8 0, i8 0, i8 0)
	%303 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production226, i32 0, i32 0), i8 0, i8 0, i8 0)
	%304 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([8 x i8]* @.production227, i32 0, i32 0), i8 0, i8 0, i8 0)
	%305 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([19 x i8]* @.production224, i32 0, i32 0))
	%306 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([9 x i8]* @.production229, i32 0, i32 0), i8 0, i8 0, i8 0)
	%307 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production230, i32 0, i32 0), i8 0, i8 0, i8 0)
	%308 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([14 x i8]* @.production231, i32 0, i32 0), i8 0, i8 0, i8 0)
	%309 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([19 x i8]* @.production228, i32 0, i32 0))
	%310 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production233, i32 0, i32 0), i8 0, i8 0, i8 0)
	%311 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production234, i32 0, i32 0), i8 0, i8 0, i8 0)
	%312 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([14 x i8]* @.production235, i32 0, i32 0), i8 0, i8 0, i8 0)
	%313 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([19 x i8]* @.production232, i32 0, i32 0))
	%314 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([9 x i8]* @.production237, i32 0, i32 0), i8 0, i8 0, i8 0)
	%315 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production238, i32 0, i32 0), i8 0, i8 0, i8 0)
	%316 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([15 x i8]* @.production239, i32 0, i32 0), i8 0, i8 0, i8 0)
	%317 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([19 x i8]* @.production236, i32 0, i32 0))
	%318 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production241, i32 0, i32 0), i8 0, i8 0, i8 0)
	%319 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production242, i32 0, i32 0), i8 0, i8 0, i8 0)
	%320 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([15 x i8]* @.production243, i32 0, i32 0), i8 0, i8 0, i8 0)
	%321 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([19 x i8]* @.production240, i32 0, i32 0))
	%322 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([9 x i8]* @.production245, i32 0, i32 0), i8 0, i8 0, i8 0)
	%323 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production246, i32 0, i32 0), i8 0, i8 0, i8 0)
	%324 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([7 x i8]* @.production247, i32 0, i32 0), i8 0, i8 0, i8 0)
	%325 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([19 x i8]* @.production244, i32 0, i32 0))
	%326 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production249, i32 0, i32 0), i8 0, i8 0, i8 0)
	%327 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production250, i32 0, i32 0), i8 0, i8 0, i8 0)
	%328 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([7 x i8]* @.production251, i32 0, i32 0), i8 0, i8 0, i8 0)
	%329 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([19 x i8]* @.production248, i32 0, i32 0))
	%330 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production253, i32 0, i32 0), i8 0, i8 0, i8 0)
	%331 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production254, i32 0, i32 0), i8 0, i8 0, i8 0)
	%332 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([6 x i8]* @.production255, i32 0, i32 0), i8 0, i8 0, i8 0)
	%333 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([19 x i8]* @.production252, i32 0, i32 0))
	%334 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production257, i32 0, i32 0), i8 0, i8 0, i8 0)
	%335 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([19 x i8]* @.production256, i32 0, i32 0))
	%336 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([20 x i8]* @.production259, i32 0, i32 0), i8 0, i8 0, i8 0)
	%337 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([3 x i8]* @.production260, i32 0, i32 0), i8 0, i8 0, i8 0)
	%338 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([20 x i8]* @.production261, i32 0, i32 0), i8 0, i8 0, i8 0)
	%339 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([21 x i8]* @.production258, i32 0, i32 0))
	%340 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([21 x i8]* @.production263, i32 0, i32 0), i8 0, i8 0, i8 0)
	%341 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([3 x i8]* @.production264, i32 0, i32 0), i8 0, i8 0, i8 0)
	%342 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([21 x i8]* @.production265, i32 0, i32 0), i8 0, i8 0, i8 0)
	%343 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([21 x i8]* @.production262, i32 0, i32 0))
	%344 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([21 x i8]* @.production267, i32 0, i32 0), i8 0, i8 0, i8 0)
	%345 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([3 x i8]* @.production268, i32 0, i32 0), i8 0, i8 0, i8 0)
	%346 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([21 x i8]* @.production269, i32 0, i32 0), i8 0, i8 0, i8 0)
	%347 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([21 x i8]* @.production266, i32 0, i32 0))
	%348 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production271, i32 0, i32 0), i8 0, i8 0, i8 0)
	%349 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production272, i32 0, i32 0), i8 0, i8 0, i8 0)
	%350 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([12 x i8]* @.production273, i32 0, i32 0), i8 0, i8 0, i8 0)
	%351 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([21 x i8]* @.production270, i32 0, i32 0))
	%352 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production275, i32 0, i32 0), i8 0, i8 0, i8 0)
	%353 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production276, i32 0, i32 0), i8 0, i8 0, i8 0)
	%354 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production277, i32 0, i32 0), i8 0, i8 0, i8 0)
	%355 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([21 x i8]* @.production274, i32 0, i32 0))
	%356 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production279, i32 0, i32 0), i8 0, i8 0, i8 0)
	%357 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production280, i32 0, i32 0), i8 0, i8 0, i8 0)
	%358 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([8 x i8]* @.production281, i32 0, i32 0), i8 0, i8 0, i8 0)
	%359 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([21 x i8]* @.production278, i32 0, i32 0))
	%360 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([5 x i8]* @.production283, i32 0, i32 0), i8 0, i8 0, i8 0)
	%361 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([21 x i8]* @.production282, i32 0, i32 0))
	%362 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([6 x i8]* @.production285, i32 0, i32 0), i8 0, i8 0, i8 0)
	%363 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([21 x i8]* @.production284, i32 0, i32 0))
	%364 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production287, i32 0, i32 0), i8 0, i8 0, i8 0)
	%365 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([21 x i8]* @.production286, i32 0, i32 0))
	%366 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production289, i32 0, i32 0), i8 0, i8 0, i8 0)
	%367 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([2 x i8]* @.production290, i32 0, i32 0), i8 0, i8 0, i8 0)
	%368 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([6 x i8]* @.production291, i32 0, i32 0), i8 0, i8 0, i8 0)
	%369 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([19 x i8]* @.production288, i32 0, i32 0))
	%370 = call i32 @clParseAppendExpression(i8* getelementptr inbounds ([13 x i8]* @.production293, i32 0, i32 0), i8 0, i8 0, i8 0)
	%371 = call i32 @clParseCreateProduction(i8* getelementptr inbounds ([19 x i8]* @.production292, i32 0, i32 0))
	%372 = call i32 @clHasSwitch(i8* getelementptr inbounds ([4 x i8]* @.pass_cpp, i32 0, i32 0))
	%373 = call i32 @clHasSwitch(i8* getelementptr inbounds ([5 x i8]* @.pass_llvm, i32 0, i32 0))
	%374 = call i32 @clHasSwitch(i8* getelementptr inbounds ([5 x i8]* @.pass_cbnf, i32 0, i32 0))
	%375 = call i32 @clHasSwitch(i8* getelementptr inbounds ([7 x i8]* @.pass_vscode, i32 0, i32 0))
	ret i32 0
}
